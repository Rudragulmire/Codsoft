import sys
from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QHBoxLayout, QLineEdit, QPushButton, QListWidget, QListWidgetItem
from PyQt5.QtCore import Qt

class ToDoApp(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("To-Do List App")
        self.setGeometry(100, 100, 400, 400)
        
        self.layout = QVBoxLayout()
        
        # Input field and buttons
        self.input_field = QLineEdit()
        self.add_button = QPushButton("Add Task")
        self.delete_button = QPushButton("Delete Task")
        self.complete_button = QPushButton("Mark as Complete")
        
        # Task list widget
        self.task_list = QListWidget()
        
        # Layout management
        self.layout.addWidget(self.input_field)
        self.layout.addWidget(self.add_button)
        self.layout.addWidget(self.complete_button)
        self.layout.addWidget(self.delete_button)
        self.layout.addWidget(self.task_list)
        
        # Connect button clicks to their respective methods
        self.add_button.clicked.connect(self.add_task)
        self.delete_button.clicked.connect(self.delete_task)
        self.complete_button.clicked.connect(self.mark_task_complete)
        
        # Set layout
        self.setLayout(self.layout)
    
    def add_task(self):
        task_text = self.input_field.text()
        if task_text:
            task_item = QListWidgetItem(task_text)
            self.task_list.addItem(task_item)
            self.input_field.clear()

    def delete_task(self):
        selected_items = self.task_list.selectedItems()
        for item in selected_items:
            self.task_list.takeItem(self.task_list.row(item))

    def mark_task_complete(self):
        selected_items = self.task_list.selectedItems()
        for item in selected_items:
            font = item.font()
            font.setStrikeOut(True)  # Strike through to mark completion
            item.setFont(font)
            item.setForeground(Qt.gray)  # Change text color to gray

if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = ToDoApp()
    window.show()
    sys.exit(app.exec_())
